魏明择
email: weimz@tedu.cn
    姓名,班级号,地点,问题要写清楚



day01回顾
Python  C++ / C  Java
Python　安装：windows/ linux / mac os x
交互模式
如何运行python程序：
   $ python3 xxxx.py
数字类型：
  整型 int, 浮点型 float, 布尔型 bool, 复数类型 complex

Nonetype  空值 None
表达式 
算术运算符
  + - * / // % **
比较运算符
  > >= < <= == !=
变量
  绑定数据对象

赋值语句
  变量 = 表达式

复合赋值运算符
  += -= *= ..........

is / is not

id(obj)  返回对象的ID地址

type(obj)  返回对象的类型

help()  查看帮助文档

del 语句
  del 变量名

内建函数:
  abs round float int bool complex

换行符:  \ 




day02 笔记
pow 函数
  pow(x, y, z=None) 两个参数时相当于 x**y, 三个参数时，相当于x**y%z

示例：
  >>> pow(2, 3)  # 等 同于 2**3
  8
  >>> pow(2, 3, 5)  # 等同于2**3%5结果3
  3



换行:
  显示换行:
    折行号 \
  隐藏式换行:
    所有的括号内换行，称为隐式换行
    括号: (), [], {}

  示例：
    i = 1 + 2 + 3 \
        + 4 + 5
    print(i)  # 15 用'\'显式换行

    i = (1 + 2 + 3
        + 4 + 5)  # 括号要成对出现，会隐式换行直到找到对应的括号为止

基本输入输出
基本输入函数 input
  作用
    从标准输入设备上读取一个字符串(末尾的换行符会被删除)    
  格式:
    input('提示字符串')
  说明：
  　　返回输入的字符串(仅python3)
    '提示字符串' 可以为空
  
  示例见:
    code/01_input.py

基本输出函数　print
  作用：
  　　将一系列的值以字符串形式输出到标准输出设备上，默认为终端
  格式
    print(value, ..., sep=' ', end='\n')
  选项的关键字参数为:
    sep 两个值之间的分隔符，默认为一个空格
    end 输出完毕后在流末尾自动追加一个字符，默认为换行符'\n'
  示例见:
    code/02_print.py

练习：
  1. 今天是小明20周岁的生日，假设每年365天，计算他过了多少个星期，余多少天
  2. 分三次输入当前的小时，分钟,秒数,在终端打印已距离凌晨 0:0:0过了多少秒?


if 语句
  作用：
  　　让程序根据条件选择性的执行某条语句或某些语句
  说明：
  　　if 语句又叫条件语句，也叫分支语句
  语法:
    if 真值表达式1:
      　　语句块1
    elif 真值表达式2:
        语句块2
    elif 真值表达式3:
        语句块3
    ...
    else:
        语句块4
  语法说明:
    elif子句可以有0个,１个或多个
    else子句可以有0个或1个且只能放在此if语句的最后
  要求:
    if语句内部的语句通常要以4个空格的缩进来表示包含关系，相同的缩进格式代表相同的所属级别

  示例见:
    code/03_if.py

练习：
  任意输入一个数:
  1. 判断这个数是否大于100
  2. 判断这个数是否小于0
  3. 判断这个数是否在20 ~ 50之间

if-elif-else 示例见:
  code/04_if_elif_else.py

练习:
  1. 输入个季度 1~4 输出这个季度有哪儿几个月，如果输入不是1~4的数，提示用户您的输入有误！

  2. 输入一年中的月份(1~12), 输出这个月在哪儿个季度，如果输入的是其它数，提示您的输入有误!



if 语句的真值表达式
  if 100:
      print("真值")
  # 等同于
  if bool(100):
      print("真值")

bool(x) 返回假的情况:
  x为:
    0, 0.0, 0+0j, False, None,
    ''(空字符串)
    [] 空列表
    {} 空字典
    set() 空集合
    () 空元组
    ....


if语句嵌套
  if语句本身是由多条子句组成的一条复合语句
  if语句可以作为语句嵌套到另一个语句的内部

示例见:
  code/05_if_embed.py

练习：
  输入一个学生的成绩(0~100),
  判断这个学生的成绩是优（90~100），良(80~89)，及格(60~79)，不及格，成绩不合法5种状态
  (建议使用if语句嵌套)


条件表达式
  语法:
    表达式1 if 真值表达式 else 表达式2
  作用：
    如果真值表达式的布尔环境值为True,则执行表达式1并返回结果的引用，否则执行表达式2并返回结果的引用
  示例见:
    code/if_express.py

练习：
  写程序，输入一个数
    1) 用if语句计算出这个数的绝对值并打印出来
    2) 用条件表达式计算出这个数的绝对值并打印出来

pass 语句
  作用：
    通常用来填充语法空白
    pass 语句又名空语句
  语法:
    pass
  示例见:
    code/07_pass.py

布尔运算:
  运算符:
    not   and    or
布尔非操作 not
  语法:
    not x
  作用：
    对 x进行布尔取值,如 bool(x) 为True,则返回False, 否则返回True
  示例:
    not True  # False
    not False  # True
    not 100  # False

布尔与操作 and
  语法:
    x and y
    注: x, y代表表达式
  作用：
    优先返回假值对象
    当bool(x)的值为False时，返回x,否则返回y
  示例:
    True and True    # True
    True and False   # False
    False and True   # False
    False and False  # False

    >>> 100 and 200
    200
    >>> 0.0 and 200
    0.0
    >>> 0 and 0.0
    0


布尔或操作
  语法:
    x or y
  作用：
    优先返回真值对象,
    当x为True时返回x, 否则返回y
  示例:
    True or True   # True
    True or False  # True
    False or True  # True
    False or False # False
    100 or 200   # 100
    100 or 0.0   # 100
    0 or 200     # 200
    0 or 0.0     # 0.0

思考以下代码是做什么用的:
  score = input("请输入成绩: ") or '0'
  score = int(score)
  if score < 0 or score > 100:
      print("您的成绩不合法!!!")
  else:
      print("您输入的成绩是:", score)

正负号运算符:
    +(正号) -(负号)

  语法:
    + 表达式
    - 表达式

  示例:
    a = 5
    b = -a
    c = +a

练习：
  1. 北京出租车计费
    收费标准:
      3公里以内收费13元
      超过3公里后基本单价为 2.3元/公里
      空驶费: 超过15公里后，每公里加收基本单价的50%作为返程的空驶费(3.45元/公里)
    要求：
      输入公里数，打印出费用的金额(以元为单位进行四舍五入)
  2. 输一个学生的三科成绩：
     1. 打印出最高分是多少分
     2. 打印出最低分是多少分
     3. 打印出平均分是多少分
  3. 给出一个年份，判断是否为闰年并打印结果
    闰年规则: 每四年一闰，每百年不闰，四百年又是一个闰年
    例:
      2016年 闰年 
      2100年 不是闰年
      2400年 是闰年
  4 BMI 指数(Body Mass Index) 以称身体质量指数
    BMI值计算公式: 
         BMI = 体重(公斤)/ 身高(米)的平方
    例如:
       一个69公斤的人，身高是 173公分
       BMI = 69 / 1.73 ** 2 = 23.05
    标准表:
       BMI < 18.5        体重过轻
       18.5 <= BMI <= 24 正常范围
       BMI > 24          体重过重（超标)
    输入身高和体重，打印BMI值，并打印体重状况






















