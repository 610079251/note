1、URL的使用
	1、urls.py
		默认是在主目录中的，主路由配置文件，包含所有的地址映射

		每一个请求到达之后，都会由urls.py中的urlpatterns列表中的url()进行匹配。当url()匹配上之后，可能就会将请求转交给其他的视图(Views)或其他的urls.py去处理
	2、测试
		1、在主目录中，创建 views.py
			作用：包含所有定义好的视图(处理程序)
	3、url函数详解
		1、url函数的语法
			url(regex,views,kwargs=None,name=None)
			1、regex
				正则表达式模式，匹配请求的url，字符串类型
			2、views
				当前url对应的处理的视图函数，此处写函数名即可
			3、kwargs
				字典，用来向views传参的，如果没有参数可以省略
			4、name
				字符串，给url()起别名，方便在模板中使用
		2、通过 url 向 views 传参
			1、使用正则表达式子组传参
				使用子组传参 - ()，一个子组是一个参数，如果想传递多个参数的话，则使用多个子组，多个参数之间使用 / 分割
				urlpatterns = [
					# 访问路径是 run/ ，交给 run_views
					url(r'^run/$',run_views),
					# 访问路径是 run/两位数字，交给run_arg1_views
					url(r'^run/(\d{2})/$',run_arg1_views),
					# 访问路径是 run/两位数字/四位数字，交给run_arg2_views
					url(r'^run/(\d{2})/(\d{4})',run_arg2_views),
				]

				注意：
					1、在 url() 中，一个子组表示一个参数
					2、在 views.py 中，对应的处理函数要根据url()中子组的个数，相应的定义参数(形参)。定义的参数要位于request之后
					url(r'^run/(\d{2})/(\d{4})',run_arg2_views)

					def run_arg2_views(request,num1,num2):
						pass
			2、使用url()第三个参数，字典传参
				urlpatterns = [
					url(
						r'^show/$',
						show_views,
						{'name':'zsf','age':'25'}
					)
				]

				def show_views(request,name,age):
					pass
2、Django中的应用
	1、什么是应用
		应用就是网站中的一块独立的程序
		在Django中，主目录一般不处理用户的具体请求，主要做的是项目的初始化以及请求的分发
	2、创建应用
		1、通过 指令 创建应用
			./manage.py startapp 应用名称
			ex:
				./manage.py startapp news
		2、在 settings.py 中注册应用
			在 INSTALLED_APPS 中追加应用名称
			INSTALLED_APPS = [
				'django.contrib.admin',
				... ...
				'news'
			]
		3、应用的结构组成
			1、migrations 目录
				存放数据库中间文件的目录(日志文件)
			2、__init__.py
				应用的初始化文件
			3、admin.py
				应用的后台管理配置文件
			4、apps.py
				应用的属性配置文件
			5、models.py
				模型配置文件
			6、tests.py
				测试模块
			7、views.py
				视图处理文件
			
		练习：
			1、创建 index 应用，并注册
			2、创建 sport 应用，并注册
			3、创建 music 应用，并注册

		4、应用中的 urls
			练习
				1、访问 http://localhost:8000/news/index
					交给news应用中的urls处理(找 index_views视图)
				2、访问 http://localhost:8000/music/index
					交给music应用中的urls处理(找index_views视图)
				3、访问 http://localhost:8000/sport/index
					交给sport应用中的urls处理(找index_views视图)
				4、访问 http://localhost:8000
					交给index应用中的urls处理(找index_views视图)
				5、访问 http://localhost:8000/login
					交给index应用中的urls处理(找login_views视图)
				6、访问 http://localhost:8000/register
					交给index应用中的urls处理(找regsiter_views视图)
				7、访问 http://localhost:8000/news/
					交给news应用中的urls处理(找 index_views视图)
				8、访问 http://localhost:8000/music/
					交给music应用中的urls处理(找 index_views视图)
				9、访问 http://localhost:8000/sport/
					交给sport应用中的urls处理(找 index_views视图)
3、Django中的模板(Tempates)				
	1、什么是模板
		模板是要动态给用户呈现的网页
		模板就是一个网页 - 前后端结合的网页
		模板是通过视图(Views)呈现给用户的
	2、模板的设置
		在 settings.py 中 TEMPLATES 变量 进行模板的设置
		TEMPLATES = [
			{
				'BACKEND':'... ...',
				'DIRS':[],
				... ...
			}
		]
		1、BACKEND：指定模板的搜索引擎，不用改动
		2、DIRS：指定模板所存放的目录们
			DIRS : ['index.temp','news.temp',...]
			但是，如果DIRS中内容为空的话，那么Django会自动的到每个应用下去搜索一个叫 templates 的目录作为模板的存放目录。
			推荐：
				1、DIRS内容为空
				2、在每个应用中，创建一个 templates 目录
		3、APP_DIRS
			True:首先从DIRS中指定的目录中去查找模板，没找到的话再搜索templates目录
	3、模板的加载方式
		模板的加载需要在“视图”中完成
		1、使用 loader 获取模板，通过 HttpResponse 进行响应
			from django.template import loader
			from django.http import HttpResponse

			def index_views(request):
				#1、通过 loader 加载模板(得到一个模板对象)
				t = loader.get_template("模板名称")
				#2、通过模板对象t，将模板渲染成字符串
				html = t.render()
				#3、通过 HttpResponse 将html响应给客户端
				return HttpResponse(html)

		2、使用 render 直接加载并返回模板
			from django.shortcuts import render

			def xxx_views(request):
				return render(request,'模板名称')
	4、模板的语法
		1、变量
			1、作用
				允许将后端的数据传递给模板，在模板中，会根据变量的值进行显示
			2、Django中允许传递给模板做变量的数据类型
				数字，字符串，列表，元组，字典，函数，对象
			3、变量的语法
				通过一个字典，将要传递给模板的变量封装起来
				dic = {
					'变量1':'值1',
					'变量2':'值2',
				}
				1、使用 loader 
					t = loader.get_template('模板名称')
					html = t.render(dic)
					return HttpResponse(html)
				2、使用 render
					return render(request,'模板名称',dic)
			4、在模板中使用变量
				使用 {{变量名}}

				如果变量不存在或值为空的话，此位置不显示任何内容

				练习：
					在模板中显示以下内容：
					书名：《水浒传》
					作者：施耐庵
					主题：105个男人和3个女人的故事












http://localhost:8000/run/15/
http://localhost:8000/run/ab/


http://localhost:8000/news/xxx/xxx : 交给news应用处理
http://localhost:8000/music/xxx : 交给music应用处理
http://localhost:8000/index/xxx : 交给index应用处理
... ...

http://localhost:8000/news/index
	交给news应用中的index_views视图处理

http://localhost:8000/news/xxx/xxx... 将请求转交给 news 应用中的 urls去处理

http://localhost:8000/news/show
将请求转交给 news 应用中的 urls 的 show 路径去处理







