1、模板
	1、变量(略)
	2、标签
		1、什么是标签
			允许将服务器端的功能嵌入到模板中
		2、语法
			{% 标签内容 %}
		3、常用标签
			1、for
				1、语法
					{% for 变量 in 列表|元组|字典 %}
						<h3>{{变量}}</h3>
						<h3>{{变量.方法}}</h3>
						<h3>{{变量.属性}}</h3>
					{% endfor %}

					允许使用内置变量 - forloop 获取循环的信息
						forloop在{%for%}中是免声明就可以直接使用的
						forloop.counter : 获取当前循环的次数
						forloop.counter0: 获取当前循环的下标
						forloop.first : 是否为第一次循环
						forloop.last : 是否为最后一次循环
			2、if
				1、if 标签
					语法：
						{% if 条件 %}
							满足条件时要运行的内容
						{% endif %}
				2、if ... else ... 标签
					语法：
						{% if 条件 %}
							满足条件时要执行的操作
						{% else %}
							不满足条件时要执行的操作
						{% endif %}
				3、if ... elif ... else
					语法：
						{% if 条件1 %}
							满足条件1运行的内容
						{% elif 条件2 %}
							满足条件2运行的内容
						{% else %}
							以上条件都不满足时运行的内容
						{% endif %}
	3、过滤器
		1、作用
			在显示变量的数据之前，允许对数据进行筛选或改变
		2、过滤器的语法
			{{变量|过滤器}}
		3、常用过滤器
			1、{{value|upper}}
				将value变为大写字符输出
			2、{{value|lower}}
				将value变为小写字符输出
			3、{{value|floatformat:n}}
				将value四舍五入到 n 位小数
			4、{{value|truncatechars:n}}
				将字符串截取到n位字符(包含...)
	4、	url()中的name参数
		url(regex,views,kwargs=None,name=None)
			name:允许为当前的url设置别名，可以在Template中使用别名找到对应的url
		语法：
			url(regex,views,name="别名")
			在模板中使用别名找到对应的url
				{% url '别名' %}
	5、静态文件
		1、什么是静态文件
			不与用户发生动态交互的文件，称为静态文件
			如：css,js,image,audio,video,html
		2、Django中静态文件的处理
			需要在settings.py中设置静态文件的访问路径 和 存储路径
			1、访问路径
				STATIC_URL='/static/'

				作用：
					当访问路径是 localhost:8000/static/****
					一律去静态文件存储路径中搜索静态文件
			2、存储路径
				STATICFILES_DIRS=(BASE_DIR,'静态目录名称')

				在项目中以及各个应用中，都可以创建对应名称一个目录，来表示项目或应用中所储存静态文件的目录
		3、访问静态文件
			1、直接使用 localhost:8000/static/****
				<img src="http://localhost:8000/static/***">
				<img src="/static/***">
			2、使用 {% static %}访问静态文件
				{% static %}表示的就是静态文件访问路径
				1、在模板的最顶层增加
					{% load static %}
				2、在使用静态文件时
					<img src="{% static '具体路径'%}">
					ex:
						<img src="{% static 'images/huiyuan.jpg'%}">

		作业：
			1、完善fruitday项目中的login登录页面
